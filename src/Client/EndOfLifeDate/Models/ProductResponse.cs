// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace EndOfLifeDate.Client.Models
{
    /// <summary>
    /// A response containing a product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProductResponse : IParsable
    {
        /// <summary>The time this product was last modified.</summary>
        public DateTimeOffset? LastModified { get; set; }
        /// <summary>Full details of a product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::EndOfLifeDate.Client.Models.ProductDetails? Result { get; set; }
#nullable restore
#else
        public global::EndOfLifeDate.Client.Models.ProductDetails Result { get; set; }
#endif
        /// <summary>Version of this schema.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SchemaVersion { get; set; }
#nullable restore
#else
        public string SchemaVersion { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::EndOfLifeDate.Client.Models.ProductResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::EndOfLifeDate.Client.Models.ProductResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::EndOfLifeDate.Client.Models.ProductResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "last_modified", n => { LastModified = n.GetDateTimeOffsetValue(); } },
                { "result", n => { Result = n.GetObjectValue<global::EndOfLifeDate.Client.Models.ProductDetails>(global::EndOfLifeDate.Client.Models.ProductDetails.CreateFromDiscriminatorValue); } },
                { "schema_version", n => { SchemaVersion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("last_modified", LastModified);
            writer.WriteObjectValue<global::EndOfLifeDate.Client.Models.ProductDetails>("result", Result);
            writer.WriteStringValue("schema_version", SchemaVersion);
        }
    }
}
#pragma warning restore CS0618
