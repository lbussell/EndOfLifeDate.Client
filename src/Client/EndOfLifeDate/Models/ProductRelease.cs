// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace EndOfLifeDate.Client.Models
{
    /// <summary>
    /// Full information about a product release cycle.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProductRelease : IParsable
    {
        /// <summary>Codename of the product release cycle.This field is null when the release cycle does not have a codename, or when the information is not known.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Codename { get; set; }
#nullable restore
#else
        public string Codename { get; set; }
#endif
        /// <summary>Custom fields for the product release cycle.This field is null when the product does not declare at least one custom fields.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::EndOfLifeDate.Client.Models.UnknownProperties? Custom { get; set; }
#nullable restore
#else
        public global::EndOfLifeDate.Client.Models.UnknownProperties Custom { get; set; }
#endif
        /// <summary>Discontinuation date for the release cycle.This field is mainly used for hardware, it is not provided when not applicable. It is null when the date is not known.</summary>
        public Date? DiscontinuedFrom { get; set; }
        /// <summary>End of active support date for the release cycle.This field is not provided when the product does not have an active support phase. It is null when the date is not known.</summary>
        public Date? EoasFrom { get; set; }
        /// <summary>End of extended support date for the release cycle.This field is not provided when the product does not have an extended support phase. It is null when the release cycle is not eligible for extended support or when the date is not known.</summary>
        public Date? EoesFrom { get; set; }
        /// <summary>End of life date for the release cycle.This field is null when the date is not known.</summary>
        public Date? EolFrom { get; set; }
        /// <summary>Whether the release cycle is discontinued.This field is mainly used for hardware, it is not provided when not applicable.</summary>
        public bool? IsDiscontinued { get; set; }
        /// <summary>Whether the active support phase is over for the release cycle.This field is not provided when the product does not have an active support phase.</summary>
        public bool? IsEoas { get; set; }
        /// <summary>Whether the extended support phase is over for the release cycle.This field is not provided when the product does not have an extended support phase. This field is null when the release cycle is not eligible for extended support.</summary>
        public bool? IsEoes { get; set; }
        /// <summary>Whether the release cycle is EOL.</summary>
        public bool? IsEol { get; set; }
        /// <summary>Whether the product release cycle receives long-term support (LTS).</summary>
        public bool? IsLts { get; set; }
        /// <summary>Whether this release cycle still have some level of support.This can be any level of support, even extended support.</summary>
        public bool? IsMaintained { get; set; }
        /// <summary>Label of the product release cycle.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>Latest version for this release cycle.This field is null when this release cycle does not have a latest version documented.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::EndOfLifeDate.Client.Models.ProductVersion? Latest { get; set; }
#nullable restore
#else
        public global::EndOfLifeDate.Client.Models.ProductVersion Latest { get; set; }
#endif
        /// <summary>Start date of the LTS phase for the release cycle.This field is null when the isLts field is set to false, when the LTS phase does not start later than the release date, or when the date is not known.</summary>
        public Date? LtsFrom { get; set; }
        /// <summary>Name of the product release cycle.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Release date of the release cycle.</summary>
        public Date? ReleaseDate { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::EndOfLifeDate.Client.Models.ProductRelease"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::EndOfLifeDate.Client.Models.ProductRelease CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::EndOfLifeDate.Client.Models.ProductRelease();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "codename", n => { Codename = n.GetStringValue(); } },
                { "custom", n => { Custom = n.GetObjectValue<global::EndOfLifeDate.Client.Models.UnknownProperties>(global::EndOfLifeDate.Client.Models.UnknownProperties.CreateFromDiscriminatorValue); } },
                { "discontinuedFrom", n => { DiscontinuedFrom = n.GetDateValue(); } },
                { "eoasFrom", n => { EoasFrom = n.GetDateValue(); } },
                { "eoesFrom", n => { EoesFrom = n.GetDateValue(); } },
                { "eolFrom", n => { EolFrom = n.GetDateValue(); } },
                { "isDiscontinued", n => { IsDiscontinued = n.GetBoolValue(); } },
                { "isEoas", n => { IsEoas = n.GetBoolValue(); } },
                { "isEoes", n => { IsEoes = n.GetBoolValue(); } },
                { "isEol", n => { IsEol = n.GetBoolValue(); } },
                { "isLts", n => { IsLts = n.GetBoolValue(); } },
                { "isMaintained", n => { IsMaintained = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "latest", n => { Latest = n.GetObjectValue<global::EndOfLifeDate.Client.Models.ProductVersion>(global::EndOfLifeDate.Client.Models.ProductVersion.CreateFromDiscriminatorValue); } },
                { "ltsFrom", n => { LtsFrom = n.GetDateValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "releaseDate", n => { ReleaseDate = n.GetDateValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("codename", Codename);
            writer.WriteObjectValue<global::EndOfLifeDate.Client.Models.UnknownProperties>("custom", Custom);
            writer.WriteDateValue("discontinuedFrom", DiscontinuedFrom);
            writer.WriteDateValue("eoasFrom", EoasFrom);
            writer.WriteDateValue("eoesFrom", EoesFrom);
            writer.WriteDateValue("eolFrom", EolFrom);
            writer.WriteBoolValue("isDiscontinued", IsDiscontinued);
            writer.WriteBoolValue("isEoas", IsEoas);
            writer.WriteBoolValue("isEoes", IsEoes);
            writer.WriteBoolValue("isEol", IsEol);
            writer.WriteBoolValue("isLts", IsLts);
            writer.WriteBoolValue("isMaintained", IsMaintained);
            writer.WriteStringValue("label", Label);
            writer.WriteObjectValue<global::EndOfLifeDate.Client.Models.ProductVersion>("latest", Latest);
            writer.WriteDateValue("ltsFrom", LtsFrom);
            writer.WriteStringValue("name", Name);
            writer.WriteDateValue("releaseDate", ReleaseDate);
        }
    }
}
#pragma warning restore CS0618
